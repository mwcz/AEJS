
/* DATA REGISTERS : 32 BITS */
D0
D1
D2
D3
D4
D5
D6
D7
/* these are general-purpose data registers */

/* ADDRESS REGISTERS : 32 BITS */
A0
A1
A2
A3
A4
A5
A6
/* these are used as pointers, generally */

/* STACK POINTER : 32 BITS */
A7 
/**
 * In the supervisor programming model register, A7 refers to the interrupt stack pointer,
 * A7’(ISP) and the master stack pointer, A7" (MSP). The supervisor stack pointer is the active
 * stack pointer (ISP or MSP). For processors that do not support ISP or MSP, the system stack
 * is the system stack pointer (SSP). The ISP and MSP are general- purpose address registers
 * for the supervisor mode. They can be used as software stack pointers, index registers, or
 * base address registers. The ISP and MSP can be used for word and long-word operations.
 */
/**
 * Register A7 is used as a hardware stack pointer during stacking for subroutine calls and
 * exception handling. In the user programming model, A7 refers to the user stack pointer
 * (USP).
 */

/* PROGRAM COUNTER : 32 BITS */
PC
/**
 * The PC contains the address of the instruction currently executing. During instruction
 * execution and exception processing, the processor automatically increments the contents
 * or places a new value in the PC. For some addressing modes, the PC can be used as a
 * pointer for PC relative addressing.
 */

/* STATUS REGISTER : 32 BITS */
SR
/*
    15   14  13  12  11  10  9   8   7   6   5   4   3   2   1   0
    T1   T0  S   M   0   I2  I1  I0  0   0   0   X   N   Z   V   C

    Bit Description
    C   Carry
    V   Overflow
    Z   Zero
    N   Negative
    X   Extend
    I0  Interrupt priority mask bit 1
    I1  Interrupt priority mask bit 2
    I2  Interrupt priority mask bit 3
    M   Master/Interrupt switch. Determines which stack mode to use if S is set. If M is clear, SP refers to ISP, else SP refers to MSP. This bit is always clear on processor models lower than 68020.
    S   Supervisor Mode flag. If clear, SP refers to USP. If set, look at M to determine what stack SP points to.
    T0  Trace bit 1. If set, trace on change of program flow. This bit is always cleared on processor models lower than 68020.
    T1  Trace bit 2. If set, trace is allowed on any instruction. DO NOT SET BOTH TRACE BITS AT THE SAME TIME!

    (in user mode, only the low bit is accessible.  in supervisor mode, all bits can be read)
*/

/* CONDITION CODE REGISTER : 32 BITS */
CCR
/**
 * 1.1.4 Condition Code Register
 *
 * Consisting of five bits, the CCR, the status register’s lower byte, is the only portion of the
 * status register (SR) available in the user mode. Many integer instructions affect the CCR,
 * indicating the instruction’s result. Program and system control instructions also use certain
 * combinations of these bits to control program and system flow. The condition codes meet
 * two criteria: consistency across instructions, uses, and instances and meaningful results
 * with no change unless it provides useful information.
 *
 * Consistency across instructions means that all instructions that are special cases of more
 * general instructions affect the condition codes in the same way. Consistency across uses
 * means that conditional instructions test the condition codes similarly and provide the same
 * results whether a compare, test, or move instruction sets the condition codes. Consistency
 * across instances means that all instances of an instruction affect the condition codes in the
 * same way.
 *
 * The first four bits represent a condition of the result generated by an operation. The fifth bit
 * or the extend bit (X-bit) is an operand for multiprecision computations. The carry bit (C-bit)
 * and the X-bit are separate in the M68000 family to simplify programming techniques that use
 * them (refer to Table 3-18 as an example). In the instruction set definitions, the CCR is
 * illustrated as follows:
 *
 * X—Extend
 * Set to the value of the C-bit for arithmetic operations; otherwise not affected or set to a
 * specified result.
 *
 * N—Negative
 * Set if the most significant bit of the result is set; otherwise clear.
 *
 * Z—Zero
 * Set if the result equals zero; otherwise clear.
 *
 * V—Overflow
 * Set if an arithmetic overflow occurs implying that the result cannot be represented in the
 * operand size; otherwise clear.
 *
 */

/* VECTOR BASE REGISTER : 32 BITS */
VBR
/**
 * The VBR contains the base address of the exception vector table in memory. The
 * displacement of an exception vector adds to the value in this register, which accesses the
 * vector table.
 */

/* ALTERNATE FUNCTION CODE REGISTERS : 32 BITS */
SFC
DFC
/**
 * The alternate function code registers contain 3-bit function codes. Function codes can be
 * considered extensions of the 32-bit logical address that optionally provides as many as eight
 * 4-Gbyte address spaces. The processor automatically generates function codes to select
 * address spaces for data and programs at the user and supervisor modes. Certain
 * instructions use SFC and DFC to specify the function codes for operations.
 */
